(()=>{eventManagerDebugMode=!1;const eventManagerPrefixed="em";function eventManager(){var actions=function(hasProp){const{type:type,target:target}=hasProp;if(!target||!target.attributes)return;var eventHandleProp=`${eventManagerPrefixed}${type}`,hasProp=!!target.attributes.hasOwnProperty(eventHandleProp);return hasProp?target.attributes[eventHandleProp].value:void 0}(event);actions&&function(actions){actionsArr=actions.split("|"),actions.split("|").forEach(fn=>{eventManagerDebugMode&&console.log(`Call function ${fn}()`),"function"==typeof window[fn]&&window[fn]()})}(actions)}document.addEventListener("DOMContentLoad",function(){eventManagerDebugMode&&console.info("EventManager Starting...");const eventAvailableList=[];for(key in document)"on"===key.substr(0,2)&&eventAvailableList.push(key.slice(2));if(eventManagerDebugMode){let msg="Available event list:\n---------------------";eventAvailableList.forEach(item=>msg+=`\n${eventManagerPrefixed}${item.substr(0,1).toUpperCase()}${item.substr(1)}`),console.info(msg)}eventAvailableList.forEach(event=>document.addEventListener(event,eventManager))}()),setEventManagerDebugMode=(value=!1)=>{eventManagerDebugMode=value,eventManagerDebugMode?console.log("eventManager debug mode: ON"):console.log("eventManager debug mode: OFF")}})();